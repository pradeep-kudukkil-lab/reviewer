name: Deploy to Production

on:
  pull_request:
    branches:
      - pradeepprod
    types: [closed] # Triggers only when the PR is closed (merged)

permissions:
  pull-requests: read

jobs:
  deploy:
    if: ${{ github.event.pull_request.merged }} # Ensure the PR is merged before running
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up GitHub CLI
        run: sudo apt-get install -y gh

      - name: Get PR Number
        id: get_pr_number
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=$(gh pr view ${{ github.event.pull_request.number }} --json number --jq '.number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Get PR Reviews
        id: get_pr_reviews
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch all reviews and find the last approved review
          APPROVAL_INFO=$(gh pr view ${{ env.PR_NUMBER }} --json reviews --jq '.reviews | map(select(.state == "APPROVED")) | .[-1]')
          REVIEWER_NAME=$(echo "$APPROVAL_INFO" | jq -r '.author.login')
          echo "REVIEWER_NAME=$REVIEWER_NAME" >> $GITHUB_ENV

      - name: Check Approver
        id: check_approver
        run: |
          if [ "${{ env.REVIEWER_NAME }}" != "ashiqpradeepsolutions" ]; then
            echo "Error: Deployment not approved by the specified approver."
            exit 1
          fi

      - name: Read Input File
        id: read_input_file
        run: |
          # Read values from the input file
          while IFS=: read -r key value; do
            case "$key" in
              "name") APPROVER_NAME=$(echo $value | xargs) ;;
              "age") AGE=$(echo $value | xargs) ;;
              *) echo "Unknown key: $key" ;;
            esac
          done < input.txt

          # Export values to environment variables
          echo "APPROVER_NAME=$APPROVER_NAME" >> $GITHUB_ENV
          echo "AGE=$AGE" >> $GITHUB_ENV

      - name: Echo the Reviewer's Name and Age
        run: |
          echo "Deployment approved by: ${{ env.APPROVER_NAME }}"
          echo "Age of the approver: ${{ env.AGE }}"

      - name: Deploy to Production
        run: |
          echo "Deploying to production as approved by ${{ env.APPROVER_NAME }}..."
